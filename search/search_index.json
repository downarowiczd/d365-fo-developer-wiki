{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stemmer","stopWordFilter","trimmer"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to a Dynamics 365 F&amp;O developer wiki</p>"},{"location":"#dynamics-365-fo-ecosystem","title":"Dynamics 365 F&amp;O ecosystem","text":"<p> Microsoft Dynamics 365 Ecosystemmap PDF</p>"},{"location":"#useful-links","title":"Useful links","text":""},{"location":"Documentation/","title":"Internal Documentation","text":""},{"location":"Documentation/formdatasourceLinkTypes/","title":"Link types - FormDataSource","text":"<p>Form data source link type is a property of the form data source. We can add more than one tables as a data source to the form. Those data sources should have the table level relation. So, then the developer does not need to work on the coding part to find the relation records. For example, if we create the order form, that order form has orders and order details tables as form datasources. We can add both tables as a data sources to the form.</p> <p>The parent table and child table should have the table relation. So, once we add those tables in the form as data sources. We can select the child table data source and mention the parent table name in the join source property of the child table form data source property.</p>","tags":["D365 F&O","X++"]},{"location":"Documentation/formdatasourceLinkTypes/#active","title":"Active","text":"<p>Active link type update the child data sources without any delay when you select the parent table record. When you deal with more records it will affect application performance.</p>","tags":["D365 F&O","X++"]},{"location":"Documentation/formdatasourceLinkTypes/#delay","title":"Delay","text":"<p>Delay form data source link type is also same as active method the difference is that, delay method won't update immediately when you select the parent record. It will update the child data source when you select the parent table. D365 F&amp;O will use pause statement before updating the child data source.  For example, if we are dealing with lot of records so, when the user clicks or scrolls the order, order details it will not load immediately the child data source.</p> <p>So, we can use delay method because for performance improvement.</p>","tags":["D365 F&O","X++"]},{"location":"Documentation/formdatasourceLinkTypes/#passive","title":"Passive","text":"<p>Passive form data source link type won't update the child data source automatically. For example if we select the parent table order then order details child data source won't update. If we need to update the child data source we need to call the child data source execute query method by program (code).</p>","tags":["D365 F&O","X++"]},{"location":"Documentation/formdatasourceLinkTypes/#inner-join","title":"Inner join","text":"<p>Inner join form data source link type displays the rows that match with parent table and child table. For example if the order doesn't has any order details then the order will not be displayed.</p>","tags":["D365 F&O","X++"]},{"location":"Documentation/formdatasourceLinkTypes/#outer-join","title":"Outer join","text":"<p>Outer join form data source link type will return all parent records and matched child records. It will return all rows in the parent table.</p>","tags":["D365 F&O","X++"]},{"location":"Documentation/formdatasourceLinkTypes/#exist-join","title":"Exist join","text":"<p>Exist join form data source link type return matched rows of the parent table. It behaves like inner join but the difference is once parent row are matched with a child record the process stops and return only the parent record. D365 F&amp;O won't consider how many records are in the child table for the parent row.</p>","tags":["D365 F&O","X++"]},{"location":"Documentation/formdatasourceLinkTypes/#not-exist-join","title":"Not exist join","text":"<p>Not exist join form data source link type is totally opposite method to exist join. It will return the not matched parent records with child records.</p>","tags":["D365 F&O","X++"]},{"location":"Documentation/Unified%20Experience/","title":"Unified Experience - Overview","text":"<p>As part of the unification of admin experiences of finance and operations apps within Power Platform, the environment for finance and operations apps is now considered as an application within Power Platform. </p> <p>This means that multiple Dynamics 365 applications (such as Sales, Marketing, finance and operations) and apps, flows, and websites in Power Platform can be installed and hosted on the same Power Platform environment with a Dataverse database, providing a consistent and single set of lifecycle operations that an admin can perform across all of these artifacts.</p> <p></p>"},{"location":"Documentation/Unified%20Experience/#presentations","title":"Presentations","text":"<ul> <li>Presentation English (December 2023)</li> <li>Presentation German (October/November 2023)</li> </ul>"},{"location":"Documentation/Unified%20Experience/#recordings","title":"Recordings","text":"<ul> <li>Overview Recording Presentation (2023-12-29) (Sharepoint)</li> </ul>"},{"location":"Documentation/Unified%20Experience/advanceCopyFeature/","title":"Advance copy feature","text":"<p>You can initiate a copy with an additional flag that will enable you to skip copying data from a pre-selected set of Microsoft managed transaction tables. Currently (as of 2023-12-29) it only is supported over PowerShell and supports only Microsoft managed tables, in the future it should support also custom tables, which are marked as transactional.</p> <pre><code>$copyToRequest = [PSCustomObject]@{\n\nSourceEnvironmentId = \"&lt;Source Environment Id GUID&gt;\"\n\nCopyType = \"FullCopy\"\n\nSkipAuditData = 'true'\n\nExecuteAdvancedCopyForFinanceAndOperations = 'true'\n\n}\n</code></pre>"},{"location":"Documentation/Unified%20Experience/convertAndDeployPackage/","title":"Legacy package conversion and deployment","text":""},{"location":"Documentation/Unified%20Experience/convertAndDeployPackage/#convert-finance-and-operations-apps-packages-to-the-new-unified-package-format","title":"Convert finance and operations apps packages to the new unified package format","text":"<p>This step is used to convert the existing Software deployable package, typically used by Lifecycle Services, into a new, unified, deployment package format. The package format is changed to align with other Dynamics 365 applications hosted by Microsoft Dataverse.</p> <p>Run the following command using ModelUtil.exe from Windows PowerShell. You can find the .exe in your local PackageLocalDirectory, which was downloaded by Visual Studio during the setup.</p> <pre><code>.\\ModelUtil.exe -convertToUnifiedPackage -file=&lt;PathToYourPackage&gt;.zip -outputpath=&lt;OutputPath&gt;\n</code></pre> <p> </p>"},{"location":"Documentation/Unified%20Experience/convertAndDeployPackage/#upload-the-unified-deployable-package-to-the-source-environment","title":"Upload the unified deployable package to the source environment","text":"<p>This deploy command makes no changes to the finance and operations environment hosted in Lifecycle Services, nor does it require any downtime to apply this package on either the operations environment or the Dataverse environment. This is done to upload and save the customizations into Dataverse storage so they can be copied.</p> <ol> <li>Install PAC CLI.</li> <li>Authenticate and connect to source Dataverse.</li> <li>Run the following:</li> </ol> <pre><code>pac auth list\npac auth select --index 1\npac package deploy --logConsole --package &lt;OutputPath&gt;\\&lt;Package&gt;.dll\n</code></pre> <p></p>"},{"location":"Documentation/Unified%20Experience/provisionNewEnvironmentFromTemplate/","title":"Provision a new environment with an ERP-based template","text":"<p>Finance and operations apps have been reimagined as an application hosted by Microsoft Dataverse.  No longer do customers need to provision their enterprise resource planning (ERP) system separately from their low-code and other Dynamics 365 platform applications.  Additionally, most administrative actions in Power Platform are available through the admin center and an API-based experience.</p> <p>In this tutorial, learn how to:</p> <ul> <li>Go to the Power Platform admin center and create a new environment using a template based on your assigned license.</li> <li>Provision a developer-focused sandbox using PowerShell to use with X++ code.</li> <li>Delete an environment when no longer in use.</li> </ul> <p>As an example of this scenario, a customer who operates their finance and operations apps environments in Microsoft Dynamics 365 Lifecycle Services can provision one of the newer, developer-focused sandboxes in the Power Platform admin center.  </p>"},{"location":"Documentation/Unified%20Experience/provisionNewEnvironmentFromTemplate/#environment-provisioning","title":"Environment provisioning","text":"<p>The easiest way to get finance and operations apps up and running in Power Platform is to create a new environment using a template.  A template is simply an efficiency in terms of creating a Dataverse-based Power Platform environment with several applications preinstalled.  In this scenario, the finance and operations ERP application is installed automatically upon environment creation.</p>"},{"location":"Documentation/Unified%20Experience/provisionNewEnvironmentFromTemplate/#before-you-begin","title":"Before you begin","text":"<p>You can't provision finance and operations apps in Power Platform unless you have a license assigned that grants this permission. An example license is Dynamics 365 Finance or Dynamics 365 Supply Chain Management for customers, and Dynamics 365 Operations Application Partner Sandbox for partners and ISVs.  This must be assigned by your license administrator to your user account in Microsoft Entra.  You can review the licenses currently assigned to you in the Subscription table on the MyAccount page.</p> <p>You also must have at least 1 gigabyte of available Operations and Dataverse database capacities.</p>"},{"location":"Documentation/Unified%20Experience/provisionNewEnvironmentFromTemplate/#knowing-which-template-to-provision","title":"Knowing which template to provision","text":"<p>All Dynamics 365 environment templates are associated with their related full user licenses.  This means that the admin user in the Power Platform admin center must have a full license assigned to them to be able to create one of these environments, and the same holds true when using tools like PowerShell as well.  Below is a table which shows the mapping between various finance and operations apps licenses and their template details.</p> License Template name Template ID Comments Dynamics 365 Finance Finance (preview) D365_FinOps_Finance Dynamics 365 Supply Chain Management (preview) Supply Chain Management (preview) D365_FinOps_SCM Dynamics 365 Project Operations Project Operations Integrated (preview) D365_FinOps_ProjOps This is not yet available in the public preview but will be soon. Dynamics 365 Operations Application Partner Sandbox Project Operations Integrated (preview) D365_FinOps_ProjOps This is not yet available in the public preview but will be soon.  Partners may temporarily use the D365_FinOps_Finance template until this is resolved. Dynamics 365 Commerce Commerce (preview) D365_FinOps_Commerce This is not yet available in the public preview but will be soon."},{"location":"Documentation/Unified%20Experience/provisionNewEnvironmentFromTemplate/#step-by-step-provisioning-guide","title":"Step-by-step provisioning guide","text":"Power Platform admin centerPowerShell <p>In the above example, we used the Finance environment template.  See above in this article for a table reference of all templates available by license.  Also note that your environment name must be globally unique and less than 20 characters because that derives the environment URL.  We will be adding upfront validation in the future.</p>"},{"location":"Documentation/Unified%20Experience/provisionNewEnvironmentFromTemplate/#create-an-environment","title":"Create an environment","text":"<ol> <li>Sign in to the Power Platform admin center.</li> <li>Select Environments in the navigation pane.  The Environments page is displayed.</li> <li> <p>Select New. The New environment pane is displayed.</p> <p></p> </li> <li> <p>Enter a name for the environment. Environment names don't need to be unique in Power Platform, unlike in Lifecycle Services.</p> </li> <li>Choose your Provisionment region.</li> <li>From the Type list, select Sandbox.</li> <li>Enable the Dataverse data store option, and select Next.</li> <li>On the next screen, enter the Dataverse-required fields.</li> <li> <p>Select Enable Dynamics 365 apps and choose the appropriate template for your license.</p> <p> </p> </li> </ol>"},{"location":"Documentation/Unified%20Experience/provisionNewEnvironmentFromTemplate/#create-an-environment_1","title":"Create an environment","text":"<p>Load up your PowerShell console and execute the following commands to generate the environment.  Note the variables so that you can change the input values as required.</p> <pre><code>#Install the module\nInstall-Module -Name Microsoft.PowerApps.Administration.PowerShell\n\nWrite-Host \"Creating a session against the Power Platform API\"\n\nAdd-PowerAppsAccount -Endpoint prod\n\n#To construct the json object to pass in\n$jsonObject= @\" \n{ \n\"PostProvisioningPackages\": \n[ \n{ \n\"applicationUniqueName\": \"msdyn_FinanceAndOperationsProvisioningAppAnchor\", \n\"parameters\": \"DevToolsEnabled=true|DemoDataEnabled=true\" \n} \n] \n} \n\"@ | ConvertFrom-Json\n\n# To kick off new environment Provisionment\n# IMPORTANT - This has to be a single line, after the copy &amp; paste the command\nNew-AdminPowerAppEnvironment -DisplayName \"PDE_TestEnvironment\" -EnvironmentSku Sandbox -Templates \"D365_FinOps_Finance\" -TemplateMetadata $jsonObject -LocationName \"Canada\" -ProvisionDatabase\n</code></pre>"},{"location":"Documentation/Unified%20Experience/provisionNewEnvironmentFromTemplate/#delete-the-environment","title":"Delete the environment","text":"<p>In this step, delete the environment you previously created.  Deleting an environment is an action commonly done by admins who want to reclaim capacity for other purposes. An environment can be deleted using the Power Platform admin center, or PowerShell as follows.</p> Power Platform admin centerPowerShell <p>Select a specific environment, and then select the Delete button in the action bar at the top of the page.  </p> <p>Confirm that you want to delete the environment and proceed. This starts the deletion process and will eventually free up the Dataverse and Operations storage consumed by this environment for other needs.</p> <p>Use the following script to delete the previously created environment.  Set the environmentID appropriately.</p> <pre><code>#Remove the previously created environment by ID\nRemove-AdminPowerAppEnvironment -EnvironmentName [Guid]\n</code></pre>"},{"location":"Documentation/Unified%20Experience/setupVisualStudio/","title":"Setup development tools","text":""},{"location":"Documentation/Unified%20Experience/setupVisualStudio/#visual-studio","title":"Visual Studio","text":""},{"location":"Documentation/Unified%20Experience/setupVisualStudio/#power-platform-extension","title":"Power Platform extension","text":""},{"location":"Documentation/Unified%20Experience/setupVisualStudio/#fo-extension-and-metadata","title":"F&amp;O extension and metadata","text":""},{"location":"Snippets/extractBinariesFromLCSpackage/","title":"Extract binary folders from ZIPs","text":"<p>With the new Unified Experience developers are going to need the binaries from the ISV solutions on their dev machines.  That can be for example accomplished with unzipping the software deployable package and using the following PowerShell script to extract every binary zip to the reference package folder and renaming the folder to the respective model name.</p> <pre><code>## this refers to your custom metadata directory\n\n$PLD=\"C:\\Git\\CustomPackage\\bin\"\n\n## this refers to the binary package you want to extract\n\n$PKG = \"C:\\Git\\CustomPackage\\AOSPackages\"\n\n$FILES=(Get-ChildItem $PKG)\n\nforeach ($file in $FILES) {\n\n$folder=$file.Name.Replace('dynamicsax-', '')\n\n$folder=$folder.Split('.',2)[0]\n\nwrite-output \"mkdir $PLD/$folder\"\n\nNew-Item -Type directory -Path \"$PLD/$folder\"\n\nwrite-output \"unzip $PKG\\$file\"\n\nExpand-Archive -Path $PKG\\$file -DestinationPath $PLD/$folder\n\n}\n</code></pre>","tags":["Unified Experience","Snippet"]},{"location":"Snippets/factboxVisbility/","title":"Factbox visibility","text":"<p>PartList should not be used anymore as is marked for InternalUseOnly by Microsoft.</p> <pre><code>internal static void toggleFormPartVisibility(FormRun _formRun, str _formStr, boolean _isVisible = false)\n{\n    //PartList                partList;\n    //partList = new PartList(_formRun);\n\n    if(_formRun.getPartControlByName(_formStr) != null)\n    {\n        _formRun.getPartControlByName(_formStr).visible(_isVisible);\n    }\n\n    //if(partList.getPartControlByFormName(_formStr) != null)\n    //{\n    //    partList.getPartControlByFormName(_formStr).visible(_isVisible);\n    //}\n}\n</code></pre>","tags":["X++","Snippet"]},{"location":"Snippets/keywordSearch/","title":"Keyword Search","text":"<p>Dynamics 365 F&amp;O has full-text search capabilitites in the \"Sales and marketing\" module. With this feature you can performe full-text search in sales order form, product form and sales quotation form. And the search is performed across multiple fields (can be set). </p> <p>Limitation of the search are that you can only cover some fields that are present in the inventtable and other tables. And the biggest drawback is that the search terms in the result have to be in the same order as requested/searched. If you search for Inverter Battery you only get results where the order is Inverter Battery.</p> <p>There is a table named MCRInventTableIndex, that consists of two fields. One as a reference to the product, and one field that is a concatenation of several fields. As shown under, the Searchtext field contains item number and item description, just concatenated together. Then there have been created a fulltext index on this field to speed up the search on this long string.</p> <p>With a minor adjustment whe can split the search term with character <code>,</code> and performe a full-text search where the order of the keywords is not relevant. As we use the query features, we are limited with the number of joins and every keyword is one join that needs to be performed, I limited the number of keywords relevant in the code to 20 but in theory 26 or so should be possible.</p>","tags":["Snippet","X++","Prodware ISV"]},{"location":"Snippets/keywordSearch/#code","title":"Code","text":"<pre><code>internal final class InventSearchHelperPDE\n{\n    public static boolean addItemIdsToDS(MCRSearchText _searchText, Query _query)\n    {\n\n        Container keywords;\n        int conCount;\n        int numDataSource;\n        _searchText = strReplace(_searchText, '%', '*');\n\n        QueryBuildDataSource parentDataSource  = _query.addDataSource(tableNum(MCRInventTableIndex));\n\n        QueryBuildDataSource qdbsInventDistinctProduct = parentDataSource.addDataSource(tableNum(InventDistinctProduct));\n        qdbsInventDistinctProduct.addLink(fieldNum(MCRInventTableIndex,RefRecId),fieldNum(InventDistinctProduct, Product));\n\n        qdbsInventDistinctProduct.joinMode(JoinMode::InnerJoin);\n\n        keywords = str2con(_searchText, \",\");\n\n        boolean ret = false;\n\n        while(conCount &lt;= conLen(keywords))\n        {\n            conCount++;\n            str tmpSearchString = conPeek(keywords, conCount);\n\n            if(strLen(tmpSearchString) == 0)\n            {\n                continue;\n            }\n\n            if(numDataSource &gt; 20)\n            {\n                break;\n            }\n\n            numDataSource++;\n\n            QueryBuildDataSource qdbsSearch =  qdbsInventDistinctProduct.addDataSource(tableNum(MCRInventTableIndex));\n            QueryBuildRange      qdRange = qdbsSearch.addRange(fieldNum(MCRInventTableIndex,SearchText));\n            qdbsSearch.addLink(fieldNum(InventDistinctProduct, Product), fieldNum(MCRInventTableIndex, RefRecId));\n            qdbsSearch.joinMode(JoinMode::ExistsJoin);\n\n            if(MCRFullTextParameters::find().SearchType == MCRSearchMatchType::Full)\n            {\n                qdRange.rangeType(QueryRangeType::FullText);\n                qdRange.value(SysQuery::value(tmpSearchString));\n            }\n            else\n            {\n                //TODO\n                qdRange.value(SysQuery::valueLike(tmpSearchString));\n            }\n\n        }\n\n        if(numDataSource &gt; 1){\n            ret = 1;\n        }\n\n        return ret;\n\n    }\n}\n</code></pre> <pre><code>[ExtensionOf(classStr(MCRInventSearch))]\nfinal class MCRInventSearchPDE_Extension\n{\n    protected Query buildSearchQuery(MCRSearchText _mcrSearchText)\n    {\n        Query defaultSearchQuery, customSearchQuery;\n\n        defaultSearchQuery = next buildSearchQuery(_mcrSearchText);\n        customSearchQuery = MCRSearchQueryFactory::CreateQuery();\n\n        QueryBuildDataSource qdbs = customSearchQuery.addDataSource(tableNum(InventDistinctProduct));\n\n        boolean result = InventSearchHelperPDE::addItemIdsToDS(_mcrSearchText, customSearchQuery);\n        if(result)\n        {\n            defaultSearchQuery = customSearchQuery;\n        }\n\n        return defaultSearchQuery;\n    }\n}\n</code></pre>","tags":["Snippet","X++","Prodware ISV"]},{"location":"Snippets/sysoperationSandbox/","title":"SysOperation Sandbox","text":"<p>Long Processing Dialog  D365FO Original Microsoft Community Post</p> <p>There is a class in Dynamics 365FO Named SysOperationSandbox which is handle long running dialog for long running processes. This class support table and class level static method only.</p> <p>Following are the Parameters:</p> <ul> <li>Class / Table name </li> <li>Method Name</li> <li>Container</li> <li>Caption Message</li> <li>Completion Message</li> <li>Failure Message </li> </ul> <p>Warning</p> <p>It seems like that passing and returning of TempDB tables is not working, as they are passed through different sessions. (2024-01-11)</p>"},{"location":"Snippets/sysoperationSandbox/#form-code","title":"Form Code","text":"<pre><code>[Form]\npublic class SLD_DemoForm extends FormRun\n{\n    [Control(\"Button\")]\n    class FormButtonControl1\n    {\n        /// &lt;summary&gt;\n        ///\n        /// &lt;/summary&gt;\n        public void clicked()\n        {\n            container _container=[\"You can pass parameter to your method\",1000];\n            SysOperationSandbox::callStaticMethod(classNum(SLD_DemoInstance),\n            staticMethodStr(SLD_DemoInstance,LongProcess),_container,\n            'waiting caption should be here', 'Operation completed message should be here','Operation Cancelled should be here');\n            super();\n        }\n\n    }\n\n}\n</code></pre>"},{"location":"Snippets/sysoperationSandbox/#class-code","title":"Class Code","text":"<pre><code>class SLD_DemoInstance\n{\n    public static void LongProcess(container _container)\n    {\n        int contervalue= conPeek(_container,2);\n\n        for (int i=1;i &lt;= contervalue;i++)\n        {\n            /// Your logic should here\n            ///\n        }\n\n    }\n\n}\n</code></pre>"}]}